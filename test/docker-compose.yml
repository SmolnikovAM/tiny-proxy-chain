version: '3'
services:
  target:
    build: "target/"
    volumes:
      - ./target/server:/app
    entrypoint: "node ./target-server.js"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      mynetwork:
        ipv4_address: 172.30.0.2

  proxy:
    build: "proxy/"
    volumes:
      - ./proxy/config:/etc/3proxy/
    entrypoint: "3proxy /etc/3proxy/3proxy.cfg"
    networks:
      mynetwork:
        ipv4_address: 172.30.0.3
#    ports:
#      - "8080:8080" # for debug
#      - "1080:1080" # for debug

  tiny:
    build: "tiny/"
    volumes:
      - ../src/:/app/src
      - ./tiny/server/:/app/server
    # entrypoint: "node ./node_modules/.bin/nodemon --legacy-watch --delay 2.5 ./server/tiny.js" # good for debug docker updates value
    entrypoint: "node ./server/tiny.js" # good for debug docker updates value
    environment:
      - HTTP_PROXY=http://172.30.0.3:8080
      - SOCKS_PROXY=socks5://172.30.0.3:1080
      - TINY_HTTP_PORT=1000
      - TINY_SOCKS_PORT=1001
      - PING_PORT=3001
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3001/ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      mynetwork:
        ipv4_address: 172.30.0.4
    ports:
      - "1000:1000"
      - "1001:1001"
      - "3001:3001"

networks:
  mynetwork:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.30.0.0/24
